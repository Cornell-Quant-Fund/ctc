services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: trading_competition
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-devpassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U trading_user -d trading_competition" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://trading_user:${DB_PASSWORD:-devpassword}@postgres/trading_competition
      REDIS_URL: redis://redis:6379
      ADMIN_EMAILS: ${ADMIN_EMAILS:-cornellquantfund@gmail.com,ez255@cornell.edu}
      SEED_ON_STARTUP: ${SEED_ON_STARTUP:-false}
      ALLOW_ANY_API_KEY: ${ALLOW_ANY_API_KEY:-false}
      ALLOW_ALL_EMAILS: ${ALLOW_ALL_EMAILS:-false}
      ALLOWED_EMAILS: ${ALLOWED_EMAILS}
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped

  frontend:
    build: ./frontend
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost/api/v1}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-/ws/v1/market-data}
    ports:
      - "3000:3000"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs
      - ./certbot:/var/www/certbot:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
